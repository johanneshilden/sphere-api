FORMAT: 1A

# Sphere

```
/sphere/api/v1.0/
```

### Resources

* [Areas](#areas)
* [Complaints](#complaints)
* [Contacts](#contacts)
* [Customers](#customers)
* [Customer Registrations](#customer-registrations)
* [Depots](#depots)
* [Dispatches](#dispatches)
* [Orders](#orders)
* [Price Categories](#price-categories)
* [Products](#products)
* [Regions](#regions)
* [Stock Adjustments](#stock-adjustments)
* [Tasks](#tasks)
* [Vehicles](#vehicles)
* [Weight Classes](#weight-classes)

---

## Areas 

### Collection

#### GET

List all areas.

##### Endpoint

```
GET /areas?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| `limit`  | The maximum number of results to return.    | number | true     | 20      |
| `offset` | Offset from where to start returning items. | number | true     | 0       |

##### Response 200 (application/json)

```
{
    "links": {
        "self": string
    },
    "data": [
        {
            "href": string 
        } 
    ]
}
```
##### Attributes

* `links`
    * `self`

* `data`
    * `id`
    * `name`

##### Example 

```
GET /sphere/api/v1.0/areas
```

```
HTTP/1.1 200 OK
Content-Type: application/json

{
    "links": {
        "self": "/areas"
    },
    "data": [
        {
            "type": "areas",
            "id": "1",
            "title": "Area #1"
        }, 
        {
            "type": "areas",
            "id": "2",
            "title": "Area #2"
        }
    ]
}
```

### New area

#### POST

Create a new area.

##### Endpoint

```
POST /areas
```

##### Request object

```
{
    "name": string
}
```

##### Request parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| name     | The area's name.                            | string |          | &nbsp;  |

##### Response 200 (application/json)

```
{
    "status": true,
    "response_code": 200,
    "message": "OK"
}
```

### Area 

#### Get Area

Fetch a specific area.

##### Endpoint

```
GET /areas/{id}
```
##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the area.                         | number |          | &nbsp;  |

##### Response 200 (application/json)

```
{
    "name": string
}
```

#### Put Area

Update an existing area.

##### Endpoint

```
PUT /areas/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the area.                         | number |          | &nbsp;  |

#### Delete Area

Delete an area.

##### Endpoint

```
DELETE /areas/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the area.                         | number |          | &nbsp;  |

## Complaints

### Collection

#### Get Complaints

##### Endpoint

```
GET /complaints?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

#### Get Customer Complaints

##### Endpoint

```
GET /customers/{id}/complaints?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The customer's id.                          | number |          |         |
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Complaint

#### Get Complaint

Fetch a specific complaint.

##### Endpoint

```
GET /complaints/{id}
```
##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the complaint.                    | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Complaint

Update an existing complaint.

##### Endpoint

```
PUT /complaints/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the complaint.                    | number |          | &nbsp;  |

#### Delete Complaint

Delete a complaint.

##### Endpoint

```
DELETE /complaints/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the complaint.                    | number |          | &nbsp;  |

## Contacts

### Collection

##### Endpoint

```
GET /contacts?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Contact

#### Get Contact

Fetch a specific contact.

##### Endpoint

```
GET /contacts/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the contact.                      | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Contact

Update an existing contact.

##### Endpoint

```
PUT /contacts/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the contact.                      | number |          | &nbsp;  |

#### Delete Contact

Delete a contact.

##### Endpoint

```
DELETE /contacts/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the contact.                      | number |          | &nbsp;  |

## Customers

### Collection

##### Endpoint

```
GET /customers?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. |        | true     | 0       |

### Customer

#### Get Customer

Fetch a specific customer.

##### Endpoint

```
GET /customers/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the customer.                     | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Customer

Update an existing customer.

##### Endpoint

```
PUT /customers/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the customer.                     | number |          | &nbsp;  |

#### Delete Customer

Delete a customer.

##### Endpoint

```
DELETE /customers/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the customer.                     | number |          | &nbsp;  |

## Customer Registrations

### Collection

##### Endpoint

```
GET /customer_registrations?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Customer Registration

#### Get Customer Registration

Fetch a specific customer registration.

##### Endpoint

```
GET /customer_registrations/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the customer registration.        | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Customer Registration

Update an existing customer registration.

##### Endpoint

```
PUT /customer_registrations/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the customer registration.        | number |          | &nbsp;  |

#### Delete Customer Registration

Delete a customer registration.

##### Endpoint

```
DELETE /customer_registrations/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the customer registration.        | number |          | &nbsp;  |

## Depots

### Collection

##### Endpoint

```
GET /depots?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Depot

#### Get Depot

Fetch a specific depot.

##### Endpoint

```
GET /depots/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the depot.                        | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Depot

Update an existing depot.

##### Endpoint

```
PUT /depots/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the depot.                        | number |          | &nbsp;  |

#### Delete Depot

Delete a depot.

##### Endpoint

```
DELETE /depots/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the depot.                        | number |          | &nbsp;  |


## Dispatches

### Collection

##### Endpoint

```
GET /dispatches?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Dispatch

#### Get Dispatch

Fetch a specific dispatch.

##### Endpoint

```
GET /dispatches/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the dispatch.                     | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Dispatch

Update an existing dispatch.

##### Endpoint

```
PUT /dispatches/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the dispatch.                     | number |          | &nbsp;  |

#### Delete Dispatch

Delete a dispatch.

##### Endpoint

```
DELETE /dispatches/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the dispatch.                     | number |          | &nbsp;  |

## Orders

### Collection

##### Endpoint

```
GET /orders?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Order

#### Get Order

Fetch a specific order.

##### Endpoint

```
GET /orders/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the order.                        | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Order

Update an existing order.

##### Endpoint

```
PUT /orders/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the order.                        | number |          | &nbsp;  |

#### Delete Order

Delete a order.

##### Endpoint

```
DELETE /orders/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the order.                        | number |          | &nbsp;  |

## Price Categories

### Collection

##### Endpoint

```
GET /price_categories?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Price Category

#### Get Price Category

Fetch a specific price category.

##### Endpoint

```
GET /price_categories/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the price category.               | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Price Category

Update an existing price category.

##### Endpoint

```
PUT /price_categories/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the price category.               | number |          | &nbsp;  |

#### Delete Price Category

Delete a price category.

##### Endpoint

```
DELETE /price_categories/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the price category.               | number |          | &nbsp;  |

## Products

### Collection

##### Endpoint

```
GET /products?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Product

#### Get Product

Fetch a specific product.

##### Endpoint

```
GET /products/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the product.                      | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Product

Update an existing product.

##### Endpoint

```
PUT /products/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the product.                      | number |          | &nbsp;  |

#### Delete Product

Delete a product.

##### Endpoint

```
DELETE /products/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the product.                      | number |          | &nbsp;  |

## Regions

### Collection

##### Endpoint

```
GET /regions?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Region

#### Get Region

Fetch a specific region.

##### Endpoint

```
GET /regions/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the region.                       | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Region

Update an existing region.

##### Endpoint

```
PUT /regions/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the region.                       | number |          | &nbsp;  |

#### Delete Region

Delete a region.

##### Endpoint

```
DELETE /regions/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the region.                       | number |          | &nbsp;  |

## Stock Adjustments

### Collection

##### Endpoint

```
GET /stock_adjustments?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Stock Adjustment

#### Get Stock Adjustment

Fetch a specific stock adjustment.

##### Endpoint

```
GET /stock_adjustments/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the stock adjustment.             | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Stock Adjustment

Update an existing customer.

##### Endpoint

```
PUT /stock_adjustments/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the stock adjustment.             | number |          | &nbsp;  |

#### Delete Stock Adjustment

Delete a stock adjustment.

##### Endpoint

```
DELETE /stock_adjustments/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the stock adjustment.             | number |          | &nbsp;  |

## Tasks

### Collection

##### Endpoint

```
GET /tasks?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Task

#### Get Customer

Fetch a specific task.

##### Endpoint

```
GET /tasks/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the task.                         | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Task

Update an existing task.

##### Endpoint

```
PUT /tasks/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the task.                         | number |          | &nbsp;  |

#### Delete Task

Delete a task.

##### Endpoint

```
DELETE /tasks/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the task.                         | number |          | &nbsp;  |

## Vehicles

### Collection

##### Endpoint

```
GET /vehicles?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Vehicle

#### Get Customer

Fetch a specific vehicle.

##### Endpoint

```
GET /vehicles/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the vehicle.                      | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Vehicle

Update an existing vehicle.

##### Endpoint

```
PUT /vehicles/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the vehicle.                      | number |          | &nbsp;  |

#### Delete Vehicle

Delete a vehicle.

##### Endpoint

```
DELETE /vehicles/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the vehicle.                      | number |          | &nbsp;  |

## Weight Classes

### Collection

##### Endpoint

```
GET /weight_classes?limit={limit}&offset={offset}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| limit    | The maximum number of results to return.    | number | true     | 20      |
| offset   | Offset from where to start returning items. | number | true     | 0       |

### Weight Class

#### Get Weight Class

Fetch a specific weight class.

##### Endpoint

```
GET /weight_classes/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the weight class.                 | number |          | &nbsp;  |

##### Response 200 (application/json)

```
@todo
```

#### Put Weight Class

Update an existing weight class.

##### Endpoint

```
PUT /weight_classes/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the weight class.                 | number |          | &nbsp;  |

#### Delete Weight Class

Delete a weight class.

##### Endpoint

```
DELETE /weight_classes/{id}
```

##### Parameters

| Key      | Description                                 | Type   | Optional | Default |
|----------|---------------------------------------------|--------|----------|---------|
| id       | The id of the weight class.                 | number |          | &nbsp;  |

